---

# Provision Terraform remote state resources if requested
- name: Initialize Terraform remote state resources
  when:
    - init__call_cloud_role | bool
    - globals.infra_deployment_engine == 'terraform'
    - globals.terraform.auto_remote_state | bool
    - globals.terraform.state_storage in ['remote_s3']
  block:
    # Set resource variable names if not already done
    - name: Set variables for remote state bucket if not set
      when: (globals.terraform.remote_state_bucket is not defined) or
            ( (globals.terraform.remote_state_bucket) | length == 0)
      ansible.builtin.set_fact:
        globals: "{{ globals | default({}) | combine(remote_state_vars, recursive=True) }}"
      vars:
        remote_state_vars:
          terraform:
            remote_state_bucket: "{{ [globals.name_prefix, 'state-bucket'] | join('-') }}"

    - name: Set variables for remote state lock table if not set
      when: (globals.terraform.remote_state_lock_table is not defined) or
            (globals.terraform.remote_state_lock_table | length == 0)   
      ansible.builtin.set_fact:
        globals: "{{ globals | default({}) | combine(remote_state_vars, recursive=True) }}"
      vars:
        remote_state_vars:
          terraform:
            remote_state_lock_table: "{{ [globals.name_prefix, 'state-lock-table'] | join('-') }}"

    - name: Create remote state resources
      when: "'teardown' not in ansible_run_tags"
      ansible.builtin.include_role:
        name: cloudera_deploy
        tasks_from: auto_terraform_state
